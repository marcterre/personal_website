{"ast":null,"code":"var _jsxFileName = \"/Users/marc/neuefische/projects/personal_website/src/components/Comment/CommentList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentList(_ref) {\n  let {\n    comments,\n    isChecked\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `My favorite animal is the ${comment.animals}.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), console.log(comment.movieNo), /*#__PURE__*/_jsxDEV(\"p\", {\n        value: isChecked ? \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: `- ${comment.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, crypto.randomUUID(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n_c = CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["CommentList","comments","isChecked","map","comment","textarea","animals","console","log","movieNo","name","crypto","randomUUID"],"sources":["/Users/marc/neuefische/projects/personal_website/src/components/Comment/CommentList.js"],"sourcesContent":["export default function CommentList({ comments, isChecked }) {\n  return (\n    <section>\n      <h2>Comments</h2>\n      {comments.map((comment) => (\n        <section key={crypto.randomUUID()}>\n          <p>{comment.textarea}</p>\n          <p>{`My favorite animal is the ${comment.animals}.`}</p>\n          {console.log(comment.movieNo)}\n          <p value={isChecked ? \"\" : \"\"}></p>\n          <h3>{`- ${comment.name}`}</h3>\n        </section>\n      ))}\n    </section>\n  );\n}\n"],"mappings":";;AAAA,eAAe,SAASA,WAAW,OAA0B;EAAA,IAAzB;IAAEC,QAAQ;IAAEC;EAAU,CAAC;EACzD,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,EAChBD,QAAQ,CAACE,GAAG,CAAEC,OAAO,iBACpB;MAAA,wBACE;QAAA,UAAIA,OAAO,CAACC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB;QAAA,UAAK,6BAA4BD,OAAO,CAACE,OAAQ;MAAE;QAAA;QAAA;QAAA;MAAA,QAAK,EACvDC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACK,OAAO,CAAC,eAC7B;QAAG,KAAK,EAAEP,SAAS,GAAG,EAAE,GAAG;MAAG;QAAA;QAAA;QAAA;MAAA,QAAK,eACnC;QAAA,UAAM,KAAIE,OAAO,CAACM,IAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,GALlBC,MAAM,CAACC,UAAU,EAAE;MAAA;MAAA;MAAA;IAAA,QAOlC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAEd;AAAC,KAfuBZ,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}